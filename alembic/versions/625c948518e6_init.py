"""init

Revision ID: 625c948518e6
Revises: 
Create Date: 2023-07-25 19:41:25.013119

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '625c948518e6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank_account',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('account_number', sa.String(), nullable=False),
    sa.Column('account_type', sa.String(), nullable=True),
    sa.Column('ifsc_code', sa.String(), nullable=False),
    sa.Column('name_on_bank', sa.String(), nullable=False),
    sa.Column('bank_name', sa.String(), nullable=False),
    sa.Column('branch_name', sa.String(), nullable=False),
    sa.Column('verified_by_partner', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('merchant',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('bussiness_type', sa.String(), nullable=True),
    sa.Column('bussiness_catagory', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('checkout_page_link', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('onboarding_type', sa.String(), nullable=True),
    sa.Column('imei_number', sa.String(), nullable=False),
    sa.Column('digital_qr_code', sa.String(), nullable=True),
    sa.Column('annual_turnover', sa.Float(), nullable=False),
    sa.Column('external_upi', sa.String(), nullable=False),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('gender', sa.String(), nullable=False),
    sa.Column('rrn', sa.String(), nullable=False),
    sa.Column('uri', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('partner',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('qr',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_primary_payin_account', sa.Boolean(), nullable=True),
    sa.Column('is_primary_payout_account', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('state',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_log',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=True),
    sa.Column('entity_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('upi',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('upi_id', sa.String(), nullable=False),
    sa.Column('name_on_bank', sa.String(), nullable=False),
    sa.Column('verified_by_partner', sa.String(), nullable=True),
    sa.Column('verification_initiated_by_partner', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('credit_report_data',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('merchant', sa.String(), nullable=False),
    sa.Column('json_data', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['merchant'], ['merchant.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('merchant')
    )
    op.create_table('merchant_bank_account',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('bank_account', sa.String(), nullable=False),
    sa.Column('merchant', sa.String(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['bank_account'], ['bank_account.id'], ),
    sa.ForeignKeyConstraint(['merchant'], ['merchant.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bank_account'),
    sa.UniqueConstraint('merchant')
    )
    op.create_table('merchant_initiated_transaction',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('merchant', sa.String(), nullable=False),
    sa.Column('remitter_phone_number', sa.String(), nullable=False),
    sa.Column('transaction_id', sa.String(), nullable=False),
    sa.Column('mode', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('shortened_link', sa.String(), nullable=True),
    sa.Column('link_expiry', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['merchant'], ['merchant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('merchant_partner_service',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('merchant', sa.String(), nullable=False),
    sa.Column('partner', sa.String(), nullable=False),
    sa.Column('service', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['merchant'], ['merchant.id'], ),
    sa.ForeignKeyConstraint(['partner'], ['partner.id'], ),
    sa.ForeignKeyConstraint(['service'], ['service.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('merchant')
    )
    op.create_table('otp',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('otp', sa.String(), nullable=False),
    sa.Column('merchant', sa.String(), nullable=False),
    sa.Column('destination', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['merchant'], ['merchant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('qr_order',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('qr_code', sa.String(), nullable=False),
    sa.Column('merchant', sa.String(), nullable=False),
    sa.Column('order_date', sa.Date(), nullable=False),
    sa.Column('payment_mode', sa.String(), nullable=True),
    sa.Column('order_status', sa.String(), nullable=True),
    sa.Column('delivery_date', sa.Date(), nullable=True),
    sa.Column('request_id', sa.String(), nullable=False),
    sa.Column('article_id', sa.String(), nullable=False),
    sa.Column('amount', sa.String(), nullable=True),
    sa.Column('payment_url', sa.String(), nullable=False),
    sa.Column('refernce_id', sa.String(), nullable=False),
    sa.Column('pickup_date', sa.Date(), nullable=False),
    sa.Column('remark', sa.String(), nullable=True),
    sa.Column('pincode_available_for_delivery', sa.String(), nullable=True),
    sa.Column('base_tariff', sa.Float(), nullable=False),
    sa.Column('pickup_charges', sa.Float(), nullable=False),
    sa.Column('total_tariff', sa.Float(), nullable=False),
    sa.Column('label_url', sa.String(), nullable=False),
    sa.Column('reorder_for_qr', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['merchant'], ['merchant.id'], ),
    sa.ForeignKeyConstraint(['qr_code'], ['qr.id'], ),
    sa.ForeignKeyConstraint(['reorder_for_qr'], ['qr_order.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('qr_code')
    )
    op.create_table('payin_va',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('va', sa.String(), nullable=True),
    sa.Column('ifsc', sa.String(), nullable=False),
    sa.Column('vpa', sa.String(), nullable=True),
    sa.Column('merchant_partner_service', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('reject_reason', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['merchant_partner_service'], ['merchant_partner_service.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payin_settlement_bank_account',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('payin_va', sa.String(), nullable=False),
    sa.Column('merchant_bank_account', sa.String(), nullable=False),
    sa.Column('kyc_status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['merchant_bank_account'], ['merchant_bank_account.id'], ),
    sa.ForeignKeyConstraint(['payin_va'], ['payin_va.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payin_va')
    )
    op.create_table('payin_collection_settlement',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('batch_id', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('initiated_by', sa.String(), nullable=True),
    sa.Column('collection_ids', sa.String(), nullable=True),
    sa.Column('payin_settlement_bank_account', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['payin_settlement_bank_account'], ['payin_settlement_bank_account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payin_settlement_bank_account')
    )
    op.create_table('payin_collection',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('payin_va', sa.String(), nullable=False),
    sa.Column('collection_id', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('mode', sa.String(), nullable=True),
    sa.Column('remitter_upi_id', sa.String(), nullable=False),
    sa.Column('remitter_account_number', sa.String(), nullable=True),
    sa.Column('remitter_ifsc_code', sa.String(), nullable=False),
    sa.Column('remitter_name', sa.String(), nullable=False),
    sa.Column('remitter_phone_number', sa.String(), nullable=False),
    sa.Column('utr', sa.String(), nullable=True),
    sa.Column('remarks', sa.String(), nullable=True),
    sa.Column('merchant_initiated_transaction', sa.String(), nullable=False),
    sa.Column('request_hostname', sa.String(), nullable=False),
    sa.Column('payin_collection_settlement', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['merchant_initiated_transaction'], ['merchant_initiated_transaction.id'], ),
    sa.ForeignKeyConstraint(['payin_collection_settlement'], ['payin_collection_settlement.id'], ),
    sa.ForeignKeyConstraint(['payin_va'], ['payin_va.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('merchant_initiated_transaction'),
    sa.UniqueConstraint('payin_collection_settlement')
    )
    op.create_table('payin_collection_settlement_callback_dump',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('payin_collection_settlement', sa.String(), nullable=False),
    sa.Column('settlement_json_dump', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['payin_collection_settlement'], ['payin_collection_settlement.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payin_collection_settlement')
    )
    op.create_table('payin_collection_callback_dump',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('payin_collection', sa.String(), nullable=False),
    sa.Column('dump', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['payin_collection'], ['payin_collection.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payin_collection')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payin_collection_callback_dump')
    op.drop_table('payin_collection_settlement_callback_dump')
    op.drop_table('payin_collection')
    op.drop_table('payin_collection_settlement')
    op.drop_table('payin_settlement_bank_account')
    op.drop_table('payin_va')
    op.drop_table('qr_order')
    op.drop_table('otp')
    op.drop_table('merchant_partner_service')
    op.drop_table('merchant_initiated_transaction')
    op.drop_table('merchant_bank_account')
    op.drop_table('credit_report_data')
    op.drop_table('upi')
    op.drop_table('transaction_log')
    op.drop_table('state')
    op.drop_table('service')
    op.drop_table('qr')
    op.drop_table('partner')
    op.drop_table('merchant')
    op.drop_table('bank_account')
    # ### end Alembic commands ###
